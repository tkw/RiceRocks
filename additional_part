rock_group = set()
missile_group = set()
rm_rock_group = set()
missile_group = set()
# Put into timer
if len(rock_group)<=12:
	rock_group.add(Sprite(rock_pos, rock_vel, 0, rock_avel, asteroid_image, asteroid_info))

# Put into draw.canvas
def process_sprite_group():
	for draw_rock in rock_group:
		draw_rock.draw(canvas)
		draw_rock.update()
	
	for draw_missile in missile_group:
		draw_missile.draw(canvas)
		draw_missile.update()

def collide(self,other_object):
	distance=dist(self.pos,other_object.pos):
	if distance < self.radius+x_object.radius:
		return True
		
def group_colli():
	#sr_colli,sr stand for ship and rock
	global rock_group,missile_group,rm_rock_group,rm_missile_group
	
	for r_colli in rock_group:
		if r_colli.collide(my_ship):
			r_colli.animated = True
			rm_rock_group.add(r_colli)
		
		for m_colli in missile_group:
			if r_colli.collide(m_colli):
			r_colli.animate = True
			rm_rock_group.add(r_colli)
			rm_missile_group.add(m_colli)
			

# put into sprite.update()
self.age+=1
if self.age>self.lifespan:
	return False

# put into draw(canvas)
for missile in  missile_group:
	if missile.update() == False:
		rm_missile_group.add(missile)

# put into draw(canvas)
rock_group.difference_update(rm_rock_group)
missile_group.difference_update(rm_missile_group)
	
# put into Ship class.shoot()
missile_group.add(Sprite(missile_pos, missile_vel, self.angle, 0, missile_image, missile_info, missile_sound))
